[package]
name = "ambient_model_import"
version = { workspace = true }
rust-version = { workspace = true }
edition = "2021"
description = "Ambient model importer. Host-only."
license = "MIT OR Apache-2.0"
repository = "https://github.com/AmbientRun/Ambient"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ambient_std = { path = "../std" , version = "0.3.0-dev" }
ambient_core = { path = "../core" , version = "0.3.0-dev" }
ambient_ecs = { path = "../ecs" , version = "0.3.0-dev" }
ambient_renderer = { path = "../renderer" , version = "0.3.0-dev" }
ambient_element = { path = "../../shared_crates/element" , version = "0.3.0-dev" }
ambient_ui_native = { path = "../ui_native" , version = "0.3.0-dev" }
ambient_physics = { path = "../physics" , version = "0.3.0-dev" }
ambient_model = { path = "../model" , version = "0.3.0-dev" }
ambient_animation = { path = "../animation" , version = "0.3.0-dev" }
ambient_editor_derive = { path = "../../shared_crates/editor_derive" , version = "0.3.0-dev" }
physxx = { path = "../../libs/physxx" , version = "0.3.0-dev" }
glam = { workspace = true }
env_logger = { workspace = true }
gltf = { workspace = true }
image = { workspace = true }
base64 = { workspace = true }
async-trait = { workspace = true }
bincode = { workspace = true }
bytemuck = { workspace = true }
tokio = { workspace = true }
anyhow = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
itertools = { workspace = true }
reqwest = { workspace = true }
futures = { workspace = true }
async-recursion = { workspace = true }
fbxcel = { workspace = true }
ordered-float = { workspace = true }
indexmap = { workspace = true }
log = { workspace = true }
relative-path = { workspace = true }
russimp = { workspace = true, optional = true}

[dev-dependencies]
ambient_app = { path = "../app" }
ambient_element = { path = "../../shared_crates/element" }
ambient_gizmos = { path = "../gizmos" }
ambient_primitives = { path = "../primitives" }
ambient_cameras = { path = "../cameras" }
winit = { workspace = true }
