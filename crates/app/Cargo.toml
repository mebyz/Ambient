[package]
name = "ambient_app"
version = { workspace = true }
rust-version = { workspace = true }
edition = "2021"
description = "Ambient app implementation. Host-only."
license = "MIT OR Apache-2.0"
repository = "https://github.com/AmbientRun/Ambient"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ambient_sys = { path = "../sys" , version = "0.3.0-dev" }
ambient_std = { path = "../std" , version = "0.3.0-dev" }
ambient_core = { path = "../core" , version = "0.3.0-dev" }
ambient_gizmos = { path = "../gizmos" , version = "0.3.0-dev" }
ambient_gpu = { path = "../gpu" , version = "0.3.0-dev" }
ambient_renderer = { path = "../renderer" , version = "0.3.0-dev" }
ambient_cameras = { path = "../cameras" , version = "0.3.0-dev" }
ambient_ecs = { path = "../ecs" , version = "0.3.0-dev" }
ambient_ui_native = { path = "../ui_native" , version = "0.3.0-dev" }
ambient_input = { path = "../input" , version = "0.3.0-dev" }
ambient_model = { path = "../model" , version = "0.3.0-dev" }
ambient_animation = { path = "../animation" , version = "0.3.0-dev" }
ambient_procedurals = { path = "../procedurals" , version = "0.3.0-dev" }

ambient_element = { path = "../../shared_crates/element" , version = "0.3.0-dev" }

winit = { workspace = true }
flume = { workspace = true }
glam = { workspace = true }
tokio = { workspace = true }
ambient_profiling = { workspace = true }
anyhow = { workspace = true }
wgpu = { workspace = true }
puffin = { workspace = true, optional = true }
puffin_http = { workspace = true, optional = true }
tracing = { workspace = true }
parking_lot = { workspace = true }

[dev-dependencies]
ambient_primitives = { path = "../primitives" }

[features]
profile = ["puffin", "puffin_http", "ambient_profiling/profile-with-puffin"]
hotload-includes = [
    "ambient_std/hotload-includes",
    'ambient_gpu/hotload-includes',
    'ambient_renderer/hotload-includes',
    'ambient_gizmos/hotload-includes',
    'ambient_ui_native/hotload-includes',
    'ambient_model/hotload-includes',
]

[target.'cfg(target_os = "unknown")'.dependencies]
web-sys = { version = "0.3.61", features = [
    "CanvasRenderingContext2d",
    "Document",
    "Element",
    "HtmlCanvasElement",
    "HtmlDocument",
    "Performance",
    "Screen",
    "Window",
] }

[target.'cfg(not(target_os = "unknown"))'.dependencies]
thread-priority = { workspace = true }
