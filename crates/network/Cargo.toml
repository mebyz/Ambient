[package]
name = "ambient_network"
version = { workspace = true }
rust-version = { workspace = true }
edition = "2021"
description = "Ambient networking functionality. Host-only."
license = "MIT OR Apache-2.0"
repository = "https://github.com/AmbientRun/Ambient"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ambient_ecs = { path = "../ecs", version = "0.3.0-dev" }
ambient_sys = { path = "../sys", version = "0.3.0-dev" }
ambient_rpc = { path = "../rpc", version = "0.3.0-dev" }
ambient_std = { path = "../std", version = "0.3.0-dev" }
ambient_core = { path = "../core", version = "0.3.0-dev" }
ambient_gizmos = { path = "../gizmos", version = "0.3.0-dev" }
ambient_gpu = { path = "../gpu", version = "0.3.0-dev" }
ambient_ui_native = { path = "../ui_native", version = "0.3.0-dev" }
ambient_renderer = { path = "../renderer", version = "0.3.0-dev" }
ambient_element = { path = "../../shared_crates/element", version = "0.3.0-dev" }
ambient_app = { path = "../app", version = "0.3.0-dev" }
ambient_proxy = "0.3.3"
ambient_world_audio = { path = "../world_audio", version = "0.3.0-dev" }

itertools = { workspace = true }
dashmap = { workspace = true }
serde = { workspace = true }
futures = { workspace = true }
rand = { workspace = true }
thiserror = { workspace = true }
bincode = { workspace = true }
glam = { workspace = true }
winit = { workspace = true }
ambient_profiling = { workspace = true }
log = { workspace = true }
bytes = { workspace = true }
parking_lot = { workspace = true }
wgpu = { workspace = true }
flume = { workspace = true }
anyhow = { workspace = true }
manual_future = { workspace = true }
tracing = { workspace = true }
once_cell = { workspace = true }
byteorder = { workspace = true }
colored = { workspace = true }
enum_dispatch = { workspace = true }
pin-project = "1.0"
uuid = { workspace = true }
scopeguard = { workspace = true }
rustls-native-certs = { workspace = true, optional = true }
webpki-roots = { workspace = true, optional = true }

[target.'cfg(not(target_os = "unknown"))'.dependencies]
async-trait = { workspace = true }
quinn = { workspace = true }
rustls = { workspace = true }
tokio-util = "0.7"
tokio = { workspace = true }

[features]
tls-webpki-roots = ["dep:webpki-roots"]
tls-native-roots = ["dep:rustls-native-certs"]
