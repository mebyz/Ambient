[package]
edition = "2021"
name = "ambient"
version = { workspace = true }
rust-version = { workspace = true }
repository = "https://github.com/AmbientRun/Ambient"

[dependencies]
ambient_sys = { path = "../crates/sys" }
ambient_animation = { path = "../crates/animation" }
ambient_app = { path = "../crates/app" }
ambient_audio = { path = "../crates/audio" }
ambient_build = { path = "../crates/build" }
ambient_cameras = { path = "../crates/cameras" }
ambient_cloud_client = { path = "../crates/cloud_client" }
ambient_core = { path = "../crates/core" }
ambient_debugger = { path = "../crates/debugger" }
ambient_decals = { path = "../crates/decals" }
ambient_deploy = { path = "../crates/deploy" }
ambient_ecs = { path = "../crates/ecs" }
ambient_gizmos = { path = "../crates/gizmos" }
ambient_gpu = { path = "../crates/gpu" }
ambient_input = { path = "../crates/input" }
ambient_meshes = { path = "../crates/meshes" }
ambient_model = { path = "../crates/model" }
ambient_model_import = { path = "../crates/model_import" }
ambient_network = { path = "../crates/network" }
ambient_prefab = { path = "../crates/prefab" }
ambient_physics = { path = "../crates/physics" }
ambient_project_native = { path = "../crates/project_native" }
ambient_primitives = { path = "../crates/primitives" }
ambient_renderer = { path = "../crates/renderer" }
ambient_rpc = { path = "../crates/rpc" }
ambient_layout = { path = "../crates/layout" }
ambient_text = { path = "../crates/text" }
ambient_wasm = { path = "../crates/wasm", features = [
    "native",
    "wit",
    "physics",
] }
ambient_std = { path = "../crates/std" }
ambient_ui_native = { path = "../crates/ui_native" }
ambient_world_audio = { path = "../crates/world_audio" }
ambient_sky = { path = "../crates/sky" }
ambient_water = { path = "../crates/water" }
ambient_ecs_editor = { path = "../crates/ecs_editor" }

ambient_editor_derive = { path = "../shared_crates/editor_derive" }
ambient_element = { path = "../shared_crates/element" }
ambient_project = { path = "../shared_crates/project" }
ambient_shared_types = { path = "../shared_crates/shared_types", features = [
    "native",
] }
ambient_client_shared = { path = "../crates/client_shared/" }

tracing-tree = { workspace = true, optional = true }
tracing-stackdriver = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }
tracing-log = { workspace = true, optional = true }
time = { workspace = true }

anyhow = { workspace = true }
bincode = { workspace = true }
byteorder = { workspace = true }
clap = { workspace = true }
convert_case = { workspace = true }
env_logger = { workspace = true }
futures = { workspace = true }
flume = { workspace = true }
glam = { workspace = true }
log = { workspace = true }
parking_lot = { workspace = true }
rustls-pemfile = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tokio = { workspace = true }
tower-http = { workspace = true }
walkdir = { workspace = true }
image = { workspace = true }
tracing = { workspace = true }
image_hasher = { workspace = true }
git-version = { workspace = true }

[dev-dependencies]
glam = { workspace = true }
rusty-hook = "^0.11.2"

[features]
no_bundled_certs = []
default = ["tls-webpki-roots"]
slim = ["stackdriver"]
production = ["assimp"]
profile = ["ambient_app/profile"]
assimp = ["ambient_model_import/russimp"]
stackdriver = ["tracing", "tracing-stackdriver"]
tracing = ["tracing-tree", "tracing-subscriber", "tracing-log"]
tls-native-roots = ["ambient_network/tls-native-roots"]
tls-webpki-roots = ["ambient_network/tls-webpki-roots"]
hotload-includes = [
    "ambient_app/hotload-includes",
    "ambient_decals/hotload-includes",
]

[target.'cfg(not(target_os = "unknown"))'.dependencies]
axum = { workspace = true }
